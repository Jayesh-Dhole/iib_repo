

CREATE COMPUTE MODULE Agg_mf_Compute2
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
--		SET OutputRoot.Properties = InputRoot.ComIbmAggregateReplyBody.out2.Properties;
--		DECLARE ref1 REFERENCE TO InputRoot.ComIbmAggregateReplyBody.out1.XMLNSC.Result.First;
--		DECLARE ref2 REFERENCE TO InputRoot.ComIbmAggregateReplyBody.out2.XMLNSC.Result.Second;
--		CREATE LASTCHILD OF OutputRoot domain('XMLNSC');
--		SET OutputRoot.XMLNSC.Result.st.First = ref1.Name;
--		SET OutputRoot.XMLNSC.Result.st.Second = ref2.Name;

		SET OutputRoot.Properties = InputRoot.ComIbmAggregateReplyBody.out2.Properties;
        DECLARE ref1 REFERENCE TO InputRoot.ComIbmAggregateReplyBody.out1.XMLNSC.Result.First;
        DECLARE ref2 REFERENCE TO InputRoot.ComIbmAggregateReplyBody.out2.XMLNSC.Result.Second;
        CREATE LASTCHILD OF OutputRoot DOMAIN('XMLNSC');
        CREATE LASTCHILD OF OutputRoot.XMLNSC.Result AS 'st';
        CREATE LASTCHILD OF OutputRoot.XMLNSC.Result.st AS 'First';
        SET OutputRoot.XMLNSC.Result.st.First.Name = ref1.Name;
        CREATE LASTCHILD OF OutputRoot.XMLNSC.Result.st AS 'Second';
        SET OutputRoot.XMLNSC.Result.st.Second.Name = ref2.Name;
		
	END;
END MODULE;
