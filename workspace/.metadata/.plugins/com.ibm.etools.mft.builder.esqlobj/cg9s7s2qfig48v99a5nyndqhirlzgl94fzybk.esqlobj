CREATE COMPUTE MODULE VALIDATE_TASK_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
       	CALL CopyEntireMessage();
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
--		DECLARE chaID CHARACTER InputRoot.XMLNSC.Root.Header.channelId;
--		DECLARE outt CHARACTER;
--
--		IF chaID = 'TPH' THEN
--			SET outt = 'out';
--
--		ELSE
--			IF chaID = 'FCS' THEN
--				SET outt = 'out1';
--			END IF;
--		END IF;
--
--		DECLARE fild CHARACTER;
-- 		SET fild = FIELDNAME(InputRoot.XMLNSC.Root.Body.Data.*[<]);
-- 		
--		DECLARE inref3 REFERENCE TO InputRoot.XMLNSC.Root.Body.Data.{fild}.book[1];
--		DECLARE i INTEGER 1 ;
--		WHILE LASTMOVE(inref3) DO
--			DECLARE authorNN CHARACTER inref3.author;
--			IF authorNN = 'Corets, Eva' THEN
--				SET OutputRoot.XMLNSC.Root.Body.Data.{fild}.book[i] = inref3;
--				SET i = i + 1;
--			END IF;
--			MOVE inref3 NEXTSIBLING;
--		END WHILE;
--
--		PROPAGATE TO TERMINAL outt;
--	END;
    DECLARE chaID CHARACTER InputRoot.XMLNSC.Root.Header.channelId;
    DECLARE outt CHARACTER;

    -- Determine output terminal based on channelId
    IF chaID = 'TPH' THEN
        SET outt = 'out';
    ELSE
        IF chaID = 'FCS' THEN
            SET outt = 'out1';
        END IF;
    END IF;

   DECLARE FieldData BOOLEAN EXISTS(InputRoot.XMLNSC.Root.Body.Data[]);

        IF FieldData IS TRUE THEN
            -- Data tag exists, proceed with processing
            DECLARE fild CHARACTER;
            SET fild = FIELDNAME(InputRoot.XMLNSC.Root.Body.Data.*[<]);
            
            DECLARE inref3 REFERENCE TO InputRoot.XMLNSC.Root.Body.Data.{fild}.book[1];
            DECLARE i INTEGER 1;
            
            WHILE LASTMOVE(inref3) DO
                DECLARE authorNN CHARACTER inref3.author;
                IF authorNN = 'Corets, Eva' THEN
                    -- Copy matching books to OutputRoot
                    SET OutputRoot.XMLNSC.Root.Body.Data.{fild}.book[i] = inref3;
                    SET i = i + 1;
                END IF;
                MOVE inref3 NEXTSIBLING;
            END WHILE;
        ELSE
        	 DECLARE fild CHARACTER;
            SET fild = FIELDNAME(InputRoot.XMLNSC.Root.Body.Data.*[<]);
            
            DECLARE inref3 REFERENCE TO InputRoot.XMLNSC.Root.Body.Data.{fild}.book[1];
            DECLARE i INTEGER 1;
            
            WHILE LASTMOVE(inref3) DO
                DECLARE authorNN CHARACTER inref3.author;
                IF authorNN = 'Corets, Eva' THEN
                    -- Copy matching books to OutputRoot
                    SET OutputRoot.XMLNSC.Root.Body.{fild}.book[i] = inref3;
                    SET i = i + 1;
                END IF;
                MOVE inref3 NEXTSIBLING;
                END WHILE;
                
        END IF;

    -- Propagate to the appropriate terminal
    PROPAGATE TO TERMINAL outt;
END;
END MODULE;