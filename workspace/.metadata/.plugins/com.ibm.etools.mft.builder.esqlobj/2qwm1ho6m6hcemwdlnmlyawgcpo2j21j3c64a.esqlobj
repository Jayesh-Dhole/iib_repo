CREATE COMPUTE MODULE log4j2_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL initLog4j(var1)INTO external_var;
		CALL CopyEntireMessage();
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE in_data,out_data CHARACTER;
		SET OutputRoot.JSON.Data.Result = InputRoot.XMLNSC;
		SET in_data = CAST(ASBITSTREAM(InputRoot.XMLNSC CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		SET out_data = CAST(ASBITSTREAM(OutputRoot.JSON.Data.Result CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		CALL WriteLogFile(MessageFlowLabel, 'Logger1', 'INFO','Input_Data:' || in_data) INTO var1;
        CALL WriteLogFile(MessageFlowLabel, 'Logger1', 'INFO', 'Output_Data' || out_data) INTO var1;
	END;
END MODULE;