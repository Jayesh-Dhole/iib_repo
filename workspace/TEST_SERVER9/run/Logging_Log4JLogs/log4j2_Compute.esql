
DECLARE external_var EXTERNAL CHARACTER 'C:\Inlog\Log4jConfigurationFile.xml';
DECLARE var1 BOOLEAN;
CREATE COMPUTE MODULE log4j2_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL initLog4j(external_var)INTO var1;
		CALL CopyEntireMessage();
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE in_data,out_data CHARACTER;
		SET OutputRoot.JSON.Data.Root = InputRoot.XMLNSC.Root;
		SET in_data = CAST(ASBITSTREAM(InputRoot.XMLNSC CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		SET out_data = CAST(ASBITSTREAM(OutputRoot.JSON.Data CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		CALL WriteLogFile(MessageFlowLabel, 'Logger1', 'INFO','Input_Data:' || in_data) INTO var1;
        CALL WriteLogFile(MessageFlowLabel, 'Logger1', 'INFO', 'Output_Data' || out_data) INTO var1;
	END;
END MODULE;

CREATE FUNCTION WriteLogFile( IN COMPONENT_NAME CHARACTER,IN LOGGER_NAME CHARACTER, IN LEVEL CHARACTER, IN TEXT CHARACTER )
RETURNS BOOLEAN
LANGUAGE JAVA
EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.log";

CREATE FUNCTION initLog4j( IN CONFIG_FILE_NAME CHARACTER )
RETURNS BOOLEAN
LANGUAGE JAVA
EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.initLog4j";